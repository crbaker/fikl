start: instruction

instruction: "select" [function] subset collection_type subject [where] [order] [limit] [group] [output_format] [output | copy] -> select_collection
    | "select" [function] subset collection_type subject [where] order page [group] [output_format] [output | copy] -> select_paged_collection
    | "select" subset document_type subject [output_format] [output | copy] -> select_document

    | "update" collection_type subject "set" set where  -> update_collection
    | "update" document_type subject "set" set -> update_document

    | "delete" collection_type subject where -> delete_collection
    | "delete" document_type subject -> delete_document

    | "insert" "into" subject "set" set [id] -> insert_document

    | "show" "collections" [document_type subject] -> show_collections

where: "where" comparrison ("and" comparrison)*
comparrison: property[local] operator matching

local: LOCAL

format: JSON | CSV
output_format: "format" format

function: DISTINCT | COUNT | SUM | AVG | MIN | MAX

order: "order" "by" sorter ("," sorter)*
sorter: property[local] [direction]

group: "group" "by" property

page: "page" SIGNED_NUMBER

matching: (literal | array)

limit: "limit" SIGNED_NUMBER

direction: ASC | DESC

subset: (all | fields)
all: ALL
fields: property ("," property)*

set: setter ("," setter)*
setter: property "=" matching

id: IDENTIFIED BY property

DISTINCT: "distinct"
COUNT: "count"
SUM: "sum"
AVG: "avg"
MIN: "min"
MAX: "max"

CSV: "csv"
JSON: "json"
TRUE: "true"
FALSE: "false"

property: ESCAPED_STRING | CNAME
subject: ESCAPED_STRING | CNAME
literal: ESCAPED_STRING | NUMBER | SIGNED_NUMBER | NULL | TRUE | FALSE

array: "[" literal ("," literal)* "]"

output: "output" ESCAPED_STRING
copy: COPY

COPY: "copy"
LOCAL: "^"

ASC: "asc"
DESC: "desc"

ALL: "*"

ORDER: "order"
IDENTIFIED: "identified"
BY: "by"

WITHIN: "within"
FROM: "from"
AT: "at"

NULL: "null"

collection_type: WITHIN|FROM
document_type: AT
subject_type: collection_type | document_type

GREATER: ">"
GREATER_EQUAL: ">="
LESSER: "<"
LESSER_EQUAL: "<="
NOT: "!="
EQUAL: "=="
IN: "in"
NOT_IN: "not_in"
ARRAY_CONTAINS: "array_contains"
ARRAY_CONTAINS_ANY: "array_contains_any"
LIKE: "like"

operator: LESSER | LESSER_EQUAL | EQUAL | NOT | GREATER_EQUAL | GREATER | IN | NOT_IN | ARRAY_CONTAINS | ARRAY_CONTAINS_ANY | LIKE

%import common.CNAME
%import common.ESCAPED_STRING
%import common.NUMBER
%import common.SIGNED_NUMBER
%import common.WS
%ignore WS